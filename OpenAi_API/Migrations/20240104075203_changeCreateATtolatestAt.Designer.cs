// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenAi_API.Model;

#nullable disable

namespace OpenAi_API.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20240104075203_changeCreateATtolatestAt")]
    partial class changeCreateATtolatestAt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpenAi_API.Model.HistoryMessage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("creatAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("navId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("navId");

                    b.ToTable("HistoryMessages");
                });

            modelBuilder.Entity("OpenAi_API.Model.Navlink", b =>
                {
                    b.Property<string>("navId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("latestAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("navName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("navId");

                    b.ToTable("Navlinks");
                });

            modelBuilder.Entity("OpenAi_API.Model.HistoryMessage", b =>
                {
                    b.HasOne("OpenAi_API.Model.Navlink", null)
                        .WithMany("chatMessages")
                        .HasForeignKey("navId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OpenAi_API.Model.Navlink", b =>
                {
                    b.Navigation("chatMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
